{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{message0}from'../HW1';import s from'./MessageSender.module.css';// компонента, которая тестирует вашу компоненту (не изменять, any не трогать)\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MessageSender=props=>{const M=props.M;const textareaRef=useRef(null);const[messages,setMessages]=useState([]);const[text,setText]=useState('');const onChange=e=>{setText(e.currentTarget.value);};useEffect(()=>{if(textareaRef!==null&&textareaRef!==void 0&&textareaRef.current){textareaRef.current.style.height='0px';textareaRef.current.style.height=textareaRef.current.scrollHeight+'px';}},[text]);const addMessage=()=>{setMessages([...messages,{id:messages.length?messages.length+1:1,user:message0.user,message:{text,time:new Date().toTimeString().slice(0,5)}}]);setTimeout(()=>setText(''),4);};const onKeyDown=e=>{e.key==='Enter'&&e.shiftKey&&addMessage();};return/*#__PURE__*/_jsxs(_Fragment,{children:[messages.map(m=>/*#__PURE__*/_jsx(M,{message:m},'message'+m.id)),/*#__PURE__*/_jsxs(\"div\",{id:'hw1-send-message-form',className:s.sendForm,children:[/*#__PURE__*/_jsx(\"textarea\",{id:'hw1-textarea',className:s.textarea,ref:textareaRef,title:'Shift+Enter for send',placeholder:'Type your message',value:text,onChange:onChange,onKeyDown:onKeyDown}),/*#__PURE__*/_jsx(\"button\",{id:'hw1-button',className:s.button,onClick:addMessage,children:\"Send\"})]})]});};export default MessageSender;// import React, {useEffect, useRef, useState} from 'react'\n// import { message0 } from '../HW1'\n// import s from './MessageSender.module.css'\n// // компонента, которая тестирует вашу компоненту (не изменять, any не трогать)\n// const MessageSender = (props: any) => {\n//     const M = props.M\n//     const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n//     const [messages, setMessages] = useState<any[]>([])\n//     const [text, setText] = useState<any>('')\n//     const onChange = (e: any) => {\n//         setText(e.currentTarget.value)\n//     }\n//     useEffect(() => {\n//         if (textareaRef?.current) {\n//             textareaRef.current.style.height = '0px'\n//             textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px'\n//         }\n//     }, [text])\n//     const addMessage = () => {\n//         setMessages([\n//             ...messages,\n//             {\n//                 id: messages.length ? messages.length + 1 : 1,\n//                 user: message0.user,\n//                 message: {\n//                     text,\n//                     time: new Date().toTimeString().slice(0, 5),\n//                 },\n//             },\n//         ])\n//         setTimeout(() => setText(''), 4)\n//     }\n//     const onKeyDown = (e: any) => {\n//         e.key === 'Enter' && e.shiftKey && addMessage()\n//     }\n//     return (\n//         <>\n//             {messages.map((m) => (\n//                 <M key={'message' + m.id} message={m} />\n//             ))}\n//             <div id={'hw1-send-message-form'} className={s.sendForm}>\n//                 <textarea\n//                     id={'hw1-textarea'}\n//                     className={s.textarea}\n//                     ref={textareaRef}\n//                     title={'Shift+Enter for send'}\n//                     placeholder={'Type your message'}\n//                     value={text}\n//                     onChange={onChange}\n//                     onKeyDown={onKeyDown}\n//                 />\n//                 <button\n//                     id={'hw1-button'}\n//                     className={s.button}\n//                     onClick={addMessage}\n//                 >\n//                     {/*текст кнопки могут изменить студенты*/}\n//                     Send\n//                     {/**/}\n//                 </button>\n//             </div>\n//         </>\n//     )\n// }\n// export default MessageSender","map":{"version":3,"names":["React","useEffect","useRef","useState","message0","s","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MessageSender","props","M","textareaRef","messages","setMessages","text","setText","onChange","e","currentTarget","value","current","style","height","scrollHeight","addMessage","id","length","user","message","time","Date","toTimeString","slice","setTimeout","onKeyDown","key","shiftKey","children","map","m","className","sendForm","textarea","ref","title","placeholder","button","onClick"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw01/message-sender/MessageSender.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport { message0 } from '../HW1'\nimport s from './MessageSender.module.css'\n\n// компонента, которая тестирует вашу компоненту (не изменять, any не трогать)\nconst MessageSender = (props: any) => {\n    const M = props.M\n    const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n    const [messages, setMessages] = useState<any[]>([])\n    const [text, setText] = useState<any>('')\n\n    const onChange = (e: any) => {\n        setText(e.currentTarget.value)\n    }\n\n    useEffect(() => {\n        if (textareaRef?.current) {\n            textareaRef.current.style.height = '0px'\n            textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px'\n        }\n    }, [text])\n\n    const addMessage = () => {\n        setMessages([\n            ...messages,\n            {\n                id: messages.length ? messages.length + 1 : 1,\n                user: message0.user,\n                message: {\n                    text,\n                    time: new Date().toTimeString().slice(0, 5),\n                },\n            },\n        ])\n        setTimeout(() => setText(''), 4)\n    }\n\n    const onKeyDown = (e: any) => {\n        e.key === 'Enter' && e.shiftKey && addMessage()\n    }\n\n    return (\n        <>\n            {messages.map((m) => (\n                <M key={'message' + m.id} message={m} />\n            ))}\n\n            <div id={'hw1-send-message-form'} className={s.sendForm}>\n                <textarea\n                    id={'hw1-textarea'}\n                    className={s.textarea}\n                    ref={textareaRef}\n\n                    title={'Shift+Enter for send'}\n                    placeholder={'Type your message'}\n                    value={text}\n\n                    onChange={onChange}\n                    onKeyDown={onKeyDown}\n                />\n                <button\n                    id={'hw1-button'}\n                    className={s.button}\n\n                    onClick={addMessage}\n                >\n                    {/*текст кнопки могут изменить студенты*/}\n                    Send\n                    {/**/}\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default MessageSender\n\n\n\n\n\n\n\n\n\n// import React, {useEffect, useRef, useState} from 'react'\n// import { message0 } from '../HW1'\n// import s from './MessageSender.module.css'\n\n// // компонента, которая тестирует вашу компоненту (не изменять, any не трогать)\n// const MessageSender = (props: any) => {\n//     const M = props.M\n//     const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n//     const [messages, setMessages] = useState<any[]>([])\n//     const [text, setText] = useState<any>('')\n\n//     const onChange = (e: any) => {\n//         setText(e.currentTarget.value)\n//     }\n\n//     useEffect(() => {\n//         if (textareaRef?.current) {\n//             textareaRef.current.style.height = '0px'\n//             textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px'\n//         }\n//     }, [text])\n\n//     const addMessage = () => {\n//         setMessages([\n//             ...messages,\n//             {\n//                 id: messages.length ? messages.length + 1 : 1,\n//                 user: message0.user,\n//                 message: {\n//                     text,\n//                     time: new Date().toTimeString().slice(0, 5),\n//                 },\n//             },\n//         ])\n//         setTimeout(() => setText(''), 4)\n//     }\n\n//     const onKeyDown = (e: any) => {\n//         e.key === 'Enter' && e.shiftKey && addMessage()\n//     }\n\n//     return (\n//         <>\n//             {messages.map((m) => (\n//                 <M key={'message' + m.id} message={m} />\n//             ))}\n\n//             <div id={'hw1-send-message-form'} className={s.sendForm}>\n//                 <textarea\n//                     id={'hw1-textarea'}\n//                     className={s.textarea}\n//                     ref={textareaRef}\n\n//                     title={'Shift+Enter for send'}\n//                     placeholder={'Type your message'}\n//                     value={text}\n\n//                     onChange={onChange}\n//                     onKeyDown={onKeyDown}\n//                 />\n//                 <button\n//                     id={'hw1-button'}\n//                     className={s.button}\n\n//                     onClick={addMessage}\n//                 >\n//                     {/*текст кнопки могут изменить студенты*/}\n//                     Send\n//                     {/**/}\n//                 </button>\n//             </div>\n//         </>\n//     )\n// }\n\n// export default MessageSender\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}