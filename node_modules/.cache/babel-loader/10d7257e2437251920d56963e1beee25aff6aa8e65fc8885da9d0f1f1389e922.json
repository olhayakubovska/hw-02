{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw04/common/c3-SuperCheckbox/SuperCheckbox.tsx\";\nimport React from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperCheckbox = ({\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children,\n  // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n  id,\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = e => {\n    // задачка на написание онченджа\n    console.log(e.currentTarget.checked);\n    if (onChangeChecked) {\n      onChangeChecked(true);\n    }\n    i;\n    // onChange(true)\n    // onChangeChecked(e.currentTarget.checked)\n  };\n  const finalInputClassName = s.checkbox + (className ? \" \" + className : \"\");\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: s.label,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: \"checkbox\",\n      onChange: onChangeCallback,\n      className: finalInputClassName,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), children && /*#__PURE__*/_jsxDEV(\"span\", {\n      id: id ? id + \"-span\" : undefined,\n      className: s.spanClassName,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this) // благодаря label нажатие на спан передастся в инпут\n  ;\n};\n_c = SuperCheckbox;\nexport default SuperCheckbox;\nvar _c;\n$RefreshReg$(_c, \"SuperCheckbox\");","map":{"version":3,"names":["React","s","jsxDEV","_jsxDEV","SuperCheckbox","onChange","onChangeChecked","className","spanClassName","children","id","restProps","onChangeCallback","e","console","log","currentTarget","checked","i","finalInputClassName","checkbox","label","type","fileName","_jsxFileName","lineNumber","columnNumber","undefined","_c","$RefreshReg$"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw04/common/c3-SuperCheckbox/SuperCheckbox.tsx"],"sourcesContent":["import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype SuperCheckboxPropsType = Omit<DefaultInputPropsType, \"type\"> & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n  id,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    // задачка на написание онченджа\n    console.log(e.currentTarget.checked);\n    if (onChangeChecked) {\n      onChangeChecked(true);\n    }\n    i;\n    // onChange(true)\n    // onChangeChecked(e.currentTarget.checked)\n  };\n\n  const finalInputClassName = s.checkbox + (className ? \" \" + className : \"\");\n\n  return (\n    <label className={s.label}>\n      <input\n        id={id}\n        type={\"checkbox\"}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n      />\n      {children && (\n        <span id={id ? id + \"-span\" : undefined} className={s.spanClassName}>\n          {children}\n        </span>\n      )}\n    </label> // благодаря label нажатие на спан передастся в инпут\n  );\n};\n\nexport default SuperCheckbox;\n"],"mappings":";AAAA,OAAOA,KAAK,MAIL,OAAO;AACd,OAAOC,CAAC,MAAM,4BAA4B;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWA,MAAMC,aAA+C,GAAGA,CAAC;EACvDC,QAAQ;EACRC,eAAe;EACfC,SAAS;EACTC,aAAa;EACbC,QAAQ;EAAE;EACVC,EAAE;EAEF,GAAGC,SAAS,CAAC;AACf,CAAC,KAAK;EACJ,MAAMC,gBAAgB,GAAIC,CAAgC,IAAK;IAC7D;IACAC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,aAAa,CAACC,OAAO,CAAC;IACpC,IAAIX,eAAe,EAAE;MACnBA,eAAe,CAAC,IAAI,CAAC;IACvB;IACAY,CAAC;IACD;IACA;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAGlB,CAAC,CAACmB,QAAQ,IAAIb,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,CAAC;EAE3E,oBACEJ,OAAA;IAAOI,SAAS,EAAEN,CAAC,CAACoB,KAAM;IAAAZ,QAAA,gBACxBN,OAAA;MACEO,EAAE,EAAEA,EAAG;MACPY,IAAI,EAAE,UAAW;MACjBjB,QAAQ,EAAEO,gBAAiB;MAC3BL,SAAS,EAAEY,mBAAoB;MAAA,GAC3BR;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EACDjB,QAAQ,iBACPN,OAAA;MAAMO,EAAE,EAAEA,EAAE,GAAGA,EAAE,GAAG,OAAO,GAAGiB,SAAU;MAACpB,SAAS,EAAEN,CAAC,CAACO,aAAc;MAAAC,QAAA,EACjEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC,CAAC;EAAA;AAEb,CAAC;AAACE,EAAA,GAvCIxB,aAA+C;AAyCrD,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}