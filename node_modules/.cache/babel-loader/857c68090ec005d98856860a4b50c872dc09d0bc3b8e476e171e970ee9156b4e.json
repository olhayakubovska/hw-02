{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hws2/src/s2-homeworks/hw01/message/Message.tsx\";\nimport React from \"react\";\nimport s from \"./Message.module.css\";\n\n// нужно создать правильный тип вместо any\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// нужно отобразить приходящие данные\nconst Message = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"hw1-message-\" + props.message.id,\n    className: s.message,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.imageAndText,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"hw1-avatar-\" + props.message.id\n        // создаёт студент\n        ,\n        src: props.message.user.avatar\n        //\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.text,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hw1-name-\" + props.message.id,\n          className: s.name,\n          children: props.message.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          id: \"hw1-text-\" + props.message.id,\n          className: s.messageText,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: props.message.message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hw1-time-\" + props.message.id,\n      className: s.time,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.message.message.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","s","jsxDEV","_jsxDEV","Message","props","id","message","className","children","imageAndText","src","user","avatar","fileName","_jsxFileName","lineNumber","columnNumber","text","name","messageText","time","_c","$RefreshReg$"],"sources":["/Users/anatolisaukhin/hws2/src/s2-homeworks/hw01/message/Message.tsx"],"sourcesContent":["import React from \"react\";\nimport s from \"./Message.module.css\";\nimport { MessageType } from \"../HW1\";\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n  message: MessageType;\n};\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n  return (\n    <div id={\"hw1-message-\" + props.message.id} className={s.message}>\n      <div className={s.imageAndText}>\n        <img\n          id={\"hw1-avatar-\" + props.message.id}\n          // создаёт студент\n          src={props.message.user.avatar}\n          //\n        />\n        <div className={s.text}>\n          <div id={\"hw1-name-\" + props.message.id} className={s.name}>\n            {/*создаёт студент*/}\n         {props.message.user.name}\n            {/**/}\n          </div>\n          <pre id={\"hw1-text-\" + props.message.id} className={s.messageText}>\n            {/*создаёт студент*/}\n            <span>{props.message.message.text}</span>\n\n            {/**/}\n          </pre>\n        </div>\n      </div>\n      <div id={\"hw1-time-\" + props.message.id} className={s.time}>\n        {/*создаёт студент*/}\n        <span>{props.message.message.time}</span>\n\n        {/**/}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;;AAGpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA;AACA,MAAMC,OAAO,GAAIC,KAAuB,IAAK;EAC3C,oBACEF,OAAA;IAAKG,EAAE,EAAE,cAAc,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;IAACE,SAAS,EAAEP,CAAC,CAACM,OAAQ;IAAAE,QAAA,gBAC/DN,OAAA;MAAKK,SAAS,EAAEP,CAAC,CAACS,YAAa;MAAAD,QAAA,gBAC7BN,OAAA;QACEG,EAAE,EAAE,aAAa,GAAGD,KAAK,CAACE,OAAO,CAACD;QAClC;QAAA;QACAK,GAAG,EAAEN,KAAK,CAACE,OAAO,CAACK,IAAI,CAACC;QACxB;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACFd,OAAA;QAAKK,SAAS,EAAEP,CAAC,CAACiB,IAAK;QAAAT,QAAA,gBACrBN,OAAA;UAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;UAACE,SAAS,EAAEP,CAAC,CAACkB,IAAK;UAAAV,QAAA,EAE3DJ,KAAK,CAACE,OAAO,CAACK,IAAI,CAACO;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElB,CAAC,eACNd,OAAA;UAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;UAACE,SAAS,EAAEP,CAAC,CAACmB,WAAY;UAAAX,QAAA,eAEhEN,OAAA;YAAAM,QAAA,EAAOJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACW;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNd,OAAA;MAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;MAACE,SAAS,EAAEP,CAAC,CAACoB,IAAK;MAAAZ,QAAA,eAEzDN,OAAA;QAAAM,QAAA,EAAOJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACc;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAhCIlB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}