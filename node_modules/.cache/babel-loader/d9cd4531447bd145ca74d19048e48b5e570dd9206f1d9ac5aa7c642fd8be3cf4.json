{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw03/GreetingContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Greeting from \"./Greeting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const pureAddUser = (name, setError, setName, addUserCallback) => {\n  const trimmerName = name.trim();\n  if (trimmerName) {\n    addUserCallback(trimmerName);\n    setName(\"\");\n  } else {\n    setError(\"Ошибка! Введите имя!\");\n  }\n  // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n};\nexport const pureOnBlur = (name, setError) => {\n  // если имя пустое - показать ошибку\n  if (!name || name.trim() === \"\") {\n    setError(\"Ошибка! Введите имя!\");\n  }\n};\nexport const pureOnEnter = (e, addUser) => {\n  // если нажата кнопка Enter - добавить\n  if (e.key === \"Enter\") {\n    addUser();\n    e.currentTarget.blur(); // убираем фокус с инпута\n  }\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer = ({\n  users,\n  addUserCallback\n}) => {\n  _s();\n  // деструктуризация пропсов\n  const [name, setName] = useState(\"\"); // need to fix any\n  const [error, setError] = useState(\"\"); // need to fix any\n\n  const setNameCallback = e => {\n    // need to fix any\n    // setName(\"some name\"); // need to fix÷\\\n    setName(e.currentTarget.value);\n    error && setError(\"\");\n  };\n  const addUser = () => {\n    pureAddUser(name, setError, setName, addUserCallback);\n  };\n  const onBlur = () => {\n    pureOnBlur(name, setError);\n  };\n  const onEnter = e => {\n    pureOnEnter(e, addUser);\n  };\n  const totalUsers = users.length; // need to fix\n  // //   const lastUserName = users[users.length - 1].name; // need to fix\n  // const lastUserName = \"lalalal\"; // need to fix\n  // const totalUsers =1; // need to fix\n  // const a = users[totalUsers]; // need to fix\n  // console.log(users[totalUsers - 1], \"users\");\n\n  // const lastUserName = users[totalUsers - 1] ; // need to fix\n  let lastUserName = \"\";\n  if (totalUsers !== 0) {\n    lastUserName = users[totalUsers - 1].name; // need to fix\n  }\n  return /*#__PURE__*/_jsxDEV(Greeting, {\n    name: name,\n    setNameCallback: setNameCallback,\n    addUser: addUser,\n    onBlur: onBlur,\n    onEnter: onEnter,\n    error: error,\n    totalUsers: totalUsers,\n    lastUserName: lastUserName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(GreetingContainer, \"b6YtcHgdEGD1oQUpHk75+4UrKwA=\");\n_c = GreetingContainer;\nexport default GreetingContainer;\n\n// import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\n// import Greeting from './Greeting'\n// import { UserType } from './HW3'\n\n// type GreetingContainerPropsType = {\n//     users: any // need to fix any\n//     addUserCallback: any // need to fix any\n// }\n\n// export const pureAddUser = (name: any, setError: any, setName: any, addUserCallback: any) => {\n//     // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n// }\n\n// export const pureOnBlur = (name: any, setError: any) => { // если имя пустое - показать ошибку\n// }\n\n// export const pureOnEnter = (e: any, addUser: any) => { // если нажата кнопка Enter - добавить\n// }\n\n// // более простой и понятный для новичков\n// // function GreetingContainer(props: GreetingPropsType) {\n\n// // более современный и удобный для про :)\n// const GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n//     users,\n//     addUserCallback,\n// }) => {\n//     // деструктуризация пропсов\n//     const [name, setName] = useState<any>('') // need to fix any\n//     const [error, setError] = useState<any>('') // need to fix any\n\n//     const setNameCallback = (e: any) => { // need to fix any\n//         setName('some name') // need to fix\n\n//         error && setError('')\n//     }\n//     const addUser = () => {\n//         pureAddUser(name, setError, setName, addUserCallback)\n//     }\n\n//     const onBlur = () => {\n//         pureOnBlur(name, setError)\n//     }\n\n//     const onEnter = (e: any) => {\n//         pureOnEnter(e, addUser)\n//     }\n\n//     const totalUsers = 0 // need to fix\n//     const lastUserName = 'some name' // need to fix\n\n//     return (\n//         <Greeting\n//             name={name}\n//             setNameCallback={setNameCallback}\n//             addUser={addUser}\n//             onBlur={onBlur}\n//             onEnter={onEnter}\n//             error={error}\n//             totalUsers={totalUsers}\n//             lastUserName={lastUserName}\n//         />\n//     )\n// }\n\n// export default GreetingContainer\nvar _c;\n$RefreshReg$(_c, \"GreetingContainer\");","map":{"version":3,"names":["React","useState","Greeting","jsxDEV","_jsxDEV","pureAddUser","name","setError","setName","addUserCallback","trimmerName","trim","pureOnBlur","pureOnEnter","e","addUser","key","currentTarget","blur","GreetingContainer","users","_s","error","setNameCallback","value","onBlur","onEnter","totalUsers","length","lastUserName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw03/GreetingContainer.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useState } from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n  users: UserType[]; // need to fix any\n  addUserCallback: (name: string) => void; // need to fix any\n};\n\nexport const pureAddUser = (\n  name: string,\n  setError: (error: string) => void,\n  setName: (name: string) => void,\n  addUserCallback: (name: string) => void\n) => {\n  const trimmerName = name.trim();\n\n  if (trimmerName) {\n    addUserCallback(trimmerName);\n    setName(\"\");\n  } else {\n    setError(\"Ошибка! Введите имя!\");\n  }\n  // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n};\n\nexport const pureOnBlur = (name: string, setError: (error: string) => void) => {\n  // если имя пустое - показать ошибку\n  if (!name || name.trim() === \"\") {\n    setError(\"Ошибка! Введите имя!\")\n  }\n};\n\nexport const pureOnEnter = (\n  e: KeyboardEvent<HTMLInputElement>,\n  addUser: () => void\n) => {\n  // если нажата кнопка Enter - добавить\n  if (e.key === \"Enter\") {\n    addUser();\n    e.currentTarget.blur(); // убираем фокус с инпута\n\n  }\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n  users,\n  addUserCallback,\n}) => {\n  // деструктуризация пропсов\n  const [name, setName] = useState<string>(\"\"); // need to fix any\n  const [error, setError] = useState<string>(\"\"); // need to fix any\n\n  const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    // need to fix any\n    // setName(\"some name\"); // need to fix÷\\\n    setName(e.currentTarget.value);\n\n    error && setError(\"\");\n  };\n  const addUser = () => {\n    pureAddUser(name, setError, setName, addUserCallback);\n  };\n\n  const onBlur = () => {\n    pureOnBlur(name, setError);\n  };\n\n  const onEnter = (e: any) => {\n    pureOnEnter(e, addUser);\n  };\n\n  const totalUsers = users.length; // need to fix\n  // //   const lastUserName = users[users.length - 1].name; // need to fix\n  // const lastUserName = \"lalalal\"; // need to fix\n  // const totalUsers =1; // need to fix\n  // const a = users[totalUsers]; // need to fix\n  // console.log(users[totalUsers - 1], \"users\");\n\n  // const lastUserName = users[totalUsers - 1] ; // need to fix\n  let lastUserName = \"\";\n  if (totalUsers !== 0) {\n    lastUserName = users[totalUsers - 1].name; // need to fix\n  }\n\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      onBlur={onBlur}\n      onEnter={onEnter}\n      error={error}\n      totalUsers={totalUsers}\n      lastUserName={lastUserName}\n    />\n  );\n};\n\nexport default GreetingContainer;\n\n// import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\n// import Greeting from './Greeting'\n// import { UserType } from './HW3'\n\n// type GreetingContainerPropsType = {\n//     users: any // need to fix any\n//     addUserCallback: any // need to fix any\n// }\n\n// export const pureAddUser = (name: any, setError: any, setName: any, addUserCallback: any) => {\n//     // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n// }\n\n// export const pureOnBlur = (name: any, setError: any) => { // если имя пустое - показать ошибку\n// }\n\n// export const pureOnEnter = (e: any, addUser: any) => { // если нажата кнопка Enter - добавить\n// }\n\n// // более простой и понятный для новичков\n// // function GreetingContainer(props: GreetingPropsType) {\n\n// // более современный и удобный для про :)\n// const GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n//     users,\n//     addUserCallback,\n// }) => {\n//     // деструктуризация пропсов\n//     const [name, setName] = useState<any>('') // need to fix any\n//     const [error, setError] = useState<any>('') // need to fix any\n\n//     const setNameCallback = (e: any) => { // need to fix any\n//         setName('some name') // need to fix\n\n//         error && setError('')\n//     }\n//     const addUser = () => {\n//         pureAddUser(name, setError, setName, addUserCallback)\n//     }\n\n//     const onBlur = () => {\n//         pureOnBlur(name, setError)\n//     }\n\n//     const onEnter = (e: any) => {\n//         pureOnEnter(e, addUser)\n//     }\n\n//     const totalUsers = 0 // need to fix\n//     const lastUserName = 'some name' // need to fix\n\n//     return (\n//         <Greeting\n//             name={name}\n//             setNameCallback={setNameCallback}\n//             addUser={addUser}\n//             onBlur={onBlur}\n//             onEnter={onEnter}\n//             error={error}\n//             totalUsers={totalUsers}\n//             lastUserName={lastUserName}\n//         />\n//     )\n// }\n\n// export default GreetingContainer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}