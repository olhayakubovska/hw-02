{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx\";\nimport React from 'react';\nimport s from './SuperButton.module.css';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperButton = ({\n  xType,\n  className,\n  disabled,\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n  // const finalClassName = s.button\n  //     // + (disabled\n  //     //         ? ...\n  //     //         : xType === 'red'\n  //     //             ? ...\n  //     + (className ? ' ' + className : '') // задачка на смешивание классов\n  const finalClassName = s.button + \" \" + (disabled ? \" \" + s.disabled : xType === 'red' ? \" \" + s.red : \" \" + s.secondary\n  // + (className ? ' ' + className : '') \n  //  : \" \" +  s.default\n  );\n  // задачка на смешивание классов\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: disabled,\n    className: finalClassName,\n    ...restProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c = SuperButton;\nexport default SuperButton;\nvar _c;\n$RefreshReg$(_c, \"SuperButton\");","map":{"version":3,"names":["React","s","jsxDEV","_jsxDEV","SuperButton","xType","className","disabled","restProps","finalClassName","button","red","secondary","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx"],"sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    xType?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        xType,\n        className,\n        disabled,\n        ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    // const finalClassName = s.button\n    //     // + (disabled\n    //     //         ? ...\n    //     //         : xType === 'red'\n    //     //             ? ...\n    //     + (className ? ' ' + className : '') // задачка на смешивание классов\n    const finalClassName = s.button + \" \" \n    +\n         ( disabled\n                ? \" \" + s.disabled\n                : xType === 'red'\n                    ? \" \" + s.red\n                    : \" \" + s.secondary\n        // + (className ? ' ' + className : '') \n                    //  : \" \" +  s.default\n                    \n                    )\n                     // задачка на смешивание классов\n\n    return (\n        <button\n            disabled={disabled}\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n"],"mappings":";AAAA,OAAOA,KAAK,MAAiD,OAAO;AACpE,OAAOC,CAAC,MAAM,0BAA0B;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,WAA2C,GAAGA,CAChD;EACIC,KAAK;EACLC,SAAS;EACTC,QAAQ;EACR,GAAGC,SAAS,CAAC;AACjB,CAAC,KACA;EACD;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,cAAc,GAAGR,CAAC,CAACS,MAAM,GAAG,GAAG,IAE9BH,QAAQ,GACD,GAAG,GAAGN,CAAC,CAACM,QAAQ,GAChBF,KAAK,KAAK,KAAK,GACX,GAAG,GAAGJ,CAAC,CAACU,GAAG,GACX,GAAG,GAAGV,CAAC,CAACW;EACtB;EACY;EAAA,CAEC;EACA;;EAEjB,oBACIT,OAAA;IACII,QAAQ,EAAEA,QAAS;IACnBD,SAAS,EAAEG,cAAe;IAAA,GACtBD;EAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAAAC,EAAA,GAlCKb,WAA2C;AAoCjD,eAAeA,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}