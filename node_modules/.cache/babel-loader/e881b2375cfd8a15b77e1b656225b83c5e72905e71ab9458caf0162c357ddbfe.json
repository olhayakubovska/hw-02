{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx\";\nimport React from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperButton = ({\n  xType,\n  className,\n  disabled,\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n  // const finalClassName = s.button\n  //     // + (disabled\n  //     //         ? ...\n  //     //         : xType === 'red'\n  //     //             ? ...\n  //     + (className ? ' ' + className : '') // задачка на смешивание классов\n  const finalClassName = s.button + \" \" + (disabled ? \" \" + s.disabled : xType === \"red\" ? \" \" + s.red : \" \" + s.secondary ? +\" \" + s.secondary : +\" \" + s.default);\n  // + (className ? ' ' + className : '')\n  //  : \" \" +  s.default\n  // задачка на смешивание классов\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: disabled,\n    className: finalClassName,\n    ...restProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = SuperButton;\nexport default SuperButton;\nvar _c;\n$RefreshReg$(_c, \"SuperButton\");","map":{"version":3,"names":["React","s","jsxDEV","_jsxDEV","SuperButton","xType","className","disabled","restProps","finalClassName","button","red","secondary","default","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx"],"sourcesContent":["import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<\n  ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  xType?: string;\n};\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\n  xType,\n  className,\n  disabled,\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n  // const finalClassName = s.button\n  //     // + (disabled\n  //     //         ? ...\n  //     //         : xType === 'red'\n  //     //             ? ...\n  //     + (className ? ' ' + className : '') // задачка на смешивание классов\n  const finalClassName =\n    s.button +\n    \" \" +\n    (disabled\n      ? \" \" + s.disabled\n      : xType === \"red\"\n            ? \" \" + s.red\n            : \" \" + s.secondary\n                      ? + \" \" + s.secondary\n                       : + \" \" +  s.default);\n    // + (className ? ' ' + className : '')\n    //  : \" \" +  s.default\n  // задачка на смешивание классов\n\n  return (\n    <button\n      disabled={disabled}\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  );\n};\n\nexport default SuperButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAmD,OAAO;AACtE,OAAOC,CAAC,MAAM,0BAA0B;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,WAA2C,GAAGA,CAAC;EACnDC,KAAK;EACLC,SAAS;EACTC,QAAQ;EACR,GAAGC,SAAS,CAAC;AACf,CAAC,KAAK;EACJ;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,cAAc,GAClBR,CAAC,CAACS,MAAM,GACR,GAAG,IACFH,QAAQ,GACL,GAAG,GAAGN,CAAC,CAACM,QAAQ,GAChBF,KAAK,KAAK,KAAK,GACT,GAAG,GAAGJ,CAAC,CAACU,GAAG,GACX,GAAG,GAAGV,CAAC,CAACW,SAAS,GACP,CAAE,GAAG,GAAGX,CAAC,CAACW,SAAS,GAClB,CAAE,GAAG,GAAIX,CAAC,CAACY,OAAO,CAAC;EACxC;EACA;EACF;;EAEA,oBACEV,OAAA;IACEI,QAAQ,EAAEA,QAAS;IACnBD,SAAS,EAAEG,cAAe;IAAA,GACtBD;EAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEN,CAAC;AAACC,EAAA,GAjCId,WAA2C;AAmCjD,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}