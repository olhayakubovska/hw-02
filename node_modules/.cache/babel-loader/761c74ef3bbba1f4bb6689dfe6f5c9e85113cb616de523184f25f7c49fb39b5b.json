{"ast":null,"code":"import React,{useState}from\"react\";import Greeting from\"./Greeting\";import{jsx as _jsx}from\"react/jsx-runtime\";export const pureAddUser=(name,setError,setName,addUserCallback)=>{const trimmerName=name.trim();if(trimmerName){addUserCallback(trimmerName);setName(\"\");}else{setError(\"Ошибка! Введите имя!\");}// если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n};export const pureOnBlur=(name,setError)=>{// если имя пустое - показать ошибку\nif(!name||name.trim()===\"\"){setError(\"Ошибка! Введите имя!\");}};export const pureOnEnter=(e,addUser)=>{// если нажата кнопка Enter - добавить\nif(e.key===\"Enter\"){addUser();// e.currentTarget.blur(); // убираем фокус с инпута\n}};// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n// более современный и удобный для про :)\nconst GreetingContainer=_ref=>{let{users,addUserCallback}=_ref;// деструктуризация пропсов\nconst[name,setName]=useState(\"\");// need to fix any\nconst[error,setError]=useState(\"\");// need to fix any\nconst setNameCallback=e=>{// need to fix any\n// setName(\"some name\"); // need to fix÷\\\nsetName(e.currentTarget.value);error&&setError(\"\");};const addUser=()=>{pureAddUser(name,setError,setName,addUserCallback);};const onBlur=()=>{pureOnBlur(name,setError);};const onEnter=e=>{pureOnEnter(e,addUser);};const totalUsers=users.length;// need to fix\n// //   const lastUserName = users[users.length - 1].name; // need to fix\n// const lastUserName = \"lalalal\"; // need to fix\n// const totalUsers =1; // need to fix\n// const a = users[totalUsers]; // need to fix\n// console.log(users[totalUsers - 1], \"users\");\n// const lastUserName = users[totalUsers - 1] ; // need to fix\nlet lastUserName=\"\";if(totalUsers!==0){lastUserName=users[totalUsers-1].name;// need to fix\n}return/*#__PURE__*/_jsx(Greeting,{name:name,setNameCallback:setNameCallback,addUser:addUser,onBlur:onBlur,onEnter:onEnter,error:error,totalUsers:totalUsers,lastUserName:lastUserName});};export default GreetingContainer;// import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\n// import Greeting from './Greeting'\n// import { UserType } from './HW3'\n// type GreetingContainerPropsType = {\n//     users: any // need to fix any\n//     addUserCallback: any // need to fix any\n// }\n// export const pureAddUser = (name: any, setError: any, setName: any, addUserCallback: any) => {\n//     // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n// }\n// export const pureOnBlur = (name: any, setError: any) => { // если имя пустое - показать ошибку\n// }\n// export const pureOnEnter = (e: any, addUser: any) => { // если нажата кнопка Enter - добавить\n// }\n// // более простой и понятный для новичков\n// // function GreetingContainer(props: GreetingPropsType) {\n// // более современный и удобный для про :)\n// const GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n//     users,\n//     addUserCallback,\n// }) => {\n//     // деструктуризация пропсов\n//     const [name, setName] = useState<any>('') // need to fix any\n//     const [error, setError] = useState<any>('') // need to fix any\n//     const setNameCallback = (e: any) => { // need to fix any\n//         setName('some name') // need to fix\n//         error && setError('')\n//     }\n//     const addUser = () => {\n//         pureAddUser(name, setError, setName, addUserCallback)\n//     }\n//     const onBlur = () => {\n//         pureOnBlur(name, setError)\n//     }\n//     const onEnter = (e: any) => {\n//         pureOnEnter(e, addUser)\n//     }\n//     const totalUsers = 0 // need to fix\n//     const lastUserName = 'some name' // need to fix\n//     return (\n//         <Greeting\n//             name={name}\n//             setNameCallback={setNameCallback}\n//             addUser={addUser}\n//             onBlur={onBlur}\n//             onEnter={onEnter}\n//             error={error}\n//             totalUsers={totalUsers}\n//             lastUserName={lastUserName}\n//         />\n//     )\n// }\n// export default GreetingContainer","map":{"version":3,"names":["React","useState","Greeting","jsx","_jsx","pureAddUser","name","setError","setName","addUserCallback","trimmerName","trim","pureOnBlur","pureOnEnter","e","addUser","key","GreetingContainer","_ref","users","error","setNameCallback","currentTarget","value","onBlur","onEnter","totalUsers","length","lastUserName"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw03/GreetingContainer.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useState } from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n  users: UserType[]; // need to fix any\n  addUserCallback: (name: string) => void; // need to fix any\n};\n\nexport const pureAddUser = (\n  name: string,\n  setError: (error: string) => void,\n  setName: (name: string) => void,\n  addUserCallback: (name: string) => void\n) => {\n  const trimmerName = name.trim();\n\n  if (trimmerName) {\n    addUserCallback(trimmerName);\n    setName(\"\");\n  } else {\n    setError(\"Ошибка! Введите имя!\");\n  }\n  // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n};\n\nexport const pureOnBlur = (name: string, setError: (error: string) => void) => {\n  // если имя пустое - показать ошибку\n  if (!name || name.trim() === \"\") {\n    setError(\"Ошибка! Введите имя!\")\n  }\n};\n\nexport const pureOnEnter = (\n  e: KeyboardEvent<HTMLInputElement>,\n  addUser: () => void\n) => {\n  // если нажата кнопка Enter - добавить\n  if (e.key === \"Enter\") {\n    addUser();\n    // e.currentTarget.blur(); // убираем фокус с инпута\n\n  }\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n  users,\n  addUserCallback,\n}) => {\n  // деструктуризация пропсов\n  const [name, setName] = useState<string>(\"\"); // need to fix any\n  const [error, setError] = useState<string>(\"\"); // need to fix any\n\n  const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    // need to fix any\n    // setName(\"some name\"); // need to fix÷\\\n    setName(e.currentTarget.value);\n\n    error && setError(\"\");\n  };\n  const addUser = () => {\n    pureAddUser(name, setError, setName, addUserCallback);\n  };\n\n  const onBlur = () => {\n    pureOnBlur(name, setError);\n  };\n\n  const onEnter = (e: any) => {\n    pureOnEnter(e, addUser);\n  };\n\n  const totalUsers = users.length; // need to fix\n  // //   const lastUserName = users[users.length - 1].name; // need to fix\n  // const lastUserName = \"lalalal\"; // need to fix\n  // const totalUsers =1; // need to fix\n  // const a = users[totalUsers]; // need to fix\n  // console.log(users[totalUsers - 1], \"users\");\n\n  // const lastUserName = users[totalUsers - 1] ; // need to fix\n  let lastUserName = \"\";\n  if (totalUsers !== 0) {\n    lastUserName = users[totalUsers - 1].name; // need to fix\n  }\n\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      onBlur={onBlur}\n      onEnter={onEnter}\n      error={error}\n      totalUsers={totalUsers}\n      lastUserName={lastUserName}\n    />\n  );\n};\n\nexport default GreetingContainer;\n\n// import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\n// import Greeting from './Greeting'\n// import { UserType } from './HW3'\n\n// type GreetingContainerPropsType = {\n//     users: any // need to fix any\n//     addUserCallback: any // need to fix any\n// }\n\n// export const pureAddUser = (name: any, setError: any, setName: any, addUserCallback: any) => {\n//     // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n// }\n\n// export const pureOnBlur = (name: any, setError: any) => { // если имя пустое - показать ошибку\n// }\n\n// export const pureOnEnter = (e: any, addUser: any) => { // если нажата кнопка Enter - добавить\n// }\n\n// // более простой и понятный для новичков\n// // function GreetingContainer(props: GreetingPropsType) {\n\n// // более современный и удобный для про :)\n// const GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n//     users,\n//     addUserCallback,\n// }) => {\n//     // деструктуризация пропсов\n//     const [name, setName] = useState<any>('') // need to fix any\n//     const [error, setError] = useState<any>('') // need to fix any\n\n//     const setNameCallback = (e: any) => { // need to fix any\n//         setName('some name') // need to fix\n\n//         error && setError('')\n//     }\n//     const addUser = () => {\n//         pureAddUser(name, setError, setName, addUserCallback)\n//     }\n\n//     const onBlur = () => {\n//         pureOnBlur(name, setError)\n//     }\n\n//     const onEnter = (e: any) => {\n//         pureOnEnter(e, addUser)\n//     }\n\n//     const totalUsers = 0 // need to fix\n//     const lastUserName = 'some name' // need to fix\n\n//     return (\n//         <Greeting\n//             name={name}\n//             setNameCallback={setNameCallback}\n//             addUser={addUser}\n//             onBlur={onBlur}\n//             onEnter={onEnter}\n//             error={error}\n//             totalUsers={totalUsers}\n//             lastUserName={lastUserName}\n//         />\n//     )\n// }\n\n// export default GreetingContainer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}