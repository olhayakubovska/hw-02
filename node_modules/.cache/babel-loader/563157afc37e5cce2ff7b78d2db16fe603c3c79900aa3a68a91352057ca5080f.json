{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw04/common/c3-SuperCheckbox/SuperCheckbox.tsx\";\nimport React from 'react';\nimport s from './SuperCheckbox.module.css';\n\n// тип пропсов обычного инпута\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperCheckbox = ({\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children,\n  // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n  id,\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = e => {\n    // задачка на написание онченджа\n    onChangeChecked(e.checked);\n  };\n  const finalInputClassName = s.checkbox + (className ? ' ' + className : '');\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: s.label,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: 'checkbox',\n      onChange: onChangeCallback,\n      className: finalInputClassName,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), children && /*#__PURE__*/_jsxDEV(\"span\", {\n      id: id ? id + '-span' : undefined,\n      className: s.spanClassName,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this) // благодаря label нажатие на спан передастся в инпут\n  ;\n};\n_c = SuperCheckbox;\nexport default SuperCheckbox;\nvar _c;\n$RefreshReg$(_c, \"SuperCheckbox\");","map":{"version":3,"names":["React","s","jsxDEV","_jsxDEV","SuperCheckbox","onChange","onChangeChecked","className","spanClassName","children","id","restProps","onChangeCallback","e","checked","finalInputClassName","checkbox","label","type","fileName","_jsxFileName","lineNumber","columnNumber","undefined","_c","$RefreshReg$"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw04/common/c3-SuperCheckbox/SuperCheckbox.tsx"],"sourcesContent":["import React, {\n    ChangeEvent,\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement>\n\ntype SuperCheckboxPropsType = Omit<DefaultInputPropsType, 'type'> & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        onChange,\n        onChangeChecked,\n        className,\n        spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n        id,\n\n        ...restProps // все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // задачка на написание онченджа\n        onChangeChecked(e.checked)\n\n    }\n\n    const finalInputClassName = s.checkbox\n        + (className ? ' ' + className : '')\n\n    return (\n        <label className={s.label}>\n            <input\n                id={id}\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && (\n                <span\n                    id={id ? id + '-span' : undefined}\n                    className={s.spanClassName}\n                >\n                    {children}\n                </span>\n            )}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n"],"mappings":";AAAA,OAAOA,KAAK,MAIL,OAAO;AACd,OAAOC,CAAC,MAAM,4BAA4B;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,aAA+C,GAAGA,CACpD;EACIC,QAAQ;EACRC,eAAe;EACfC,SAAS;EACTC,aAAa;EACbC,QAAQ;EAAE;EACVC,EAAE;EAEF,GAAGC,SAAS,CAAC;AACjB,CAAC,KACA;EACD,MAAMC,gBAAgB,GAAIC,CAAgC,IAAK;IAC3D;IACAP,eAAe,CAACO,CAAC,CAACC,OAAO,CAAC;EAE9B,CAAC;EAED,MAAMC,mBAAmB,GAAGd,CAAC,CAACe,QAAQ,IAC/BT,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,CAAC;EAExC,oBACIJ,OAAA;IAAOI,SAAS,EAAEN,CAAC,CAACgB,KAAM;IAAAR,QAAA,gBACtBN,OAAA;MACIO,EAAE,EAAEA,EAAG;MACPQ,IAAI,EAAE,UAAW;MACjBb,QAAQ,EAAEO,gBAAiB;MAC3BL,SAAS,EAAEQ,mBAAoB;MAAA,GAC3BJ;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EACDb,QAAQ,iBACLN,OAAA;MACIO,EAAE,EAAEA,EAAE,GAAGA,EAAE,GAAG,OAAO,GAAGa,SAAU;MAClChB,SAAS,EAAEN,CAAC,CAACO,aAAc;MAAAC,QAAA,EAE1BA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC,CAAC;EAAA;AAEjB,CAAC;AAAAE,EAAA,GAxCKpB,aAA+C;AA0CrD,eAAeA,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}