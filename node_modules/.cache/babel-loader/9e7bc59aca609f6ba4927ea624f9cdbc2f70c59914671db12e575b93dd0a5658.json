{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hws2/src/s2-homeworks/hw01/HW1.tsx\";\nimport React from \"react\";\nimport Message from \"./message/Message\";\nimport MessageSender from \"./message-sender/MessageSender\";\nimport s2 from \"../../s1-main/App.module.css\";\nimport FriendMessage from \"./friend-message/FriendMessage\";\nimport avatar from \"./avatar.png\";\n\n/*\n * 1 - описать тип MessageType\n * 2 - описать тип MessagePropsType в файле Message.tsx\n * 3 - в файле Message.tsx отобразить приходящие данные\n * 4 - выполнить пункты 2, 3 в файле FriendMessage.tsx\n * 5 - сделать стили в соответствии с дизайном\n * */\n\n// нужно создать правильный тип вместо any\n\n//  avatar: typeof avatar;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// структуру объекта не менять\nexport const message0 = {\n  id: 0,\n  user: {\n    avatar: avatar,\n    // можно менять\n    name: \"Some Name\" // можно менять\n  },\n  message: {\n    text: \"some textsome textsome textsome textsome textsome textsome text\",\n    // можно менять\n    time: \"22:00\" // можно менять\n  }\n};\nexport const friendMessage0 = {\n  id: 100,\n  user: {\n    avatar: avatar,\n    // можно менять\n    name: \"Friend Name\" // можно менять\n  },\n  message: {\n    text: \"зеркальное сообщение для тренировки css\",\n    // можно менять\n    time: \"22:00\" // можно менять\n  }\n};\nconst HW1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"hw1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hwTitle,\n      children: \"Homework #1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hw,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          message: message0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FriendMessage, {\n          message: friendMessage0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageSender, {\n        M: Message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c = HW1;\nexport default HW1;\nvar _c;\n$RefreshReg$(_c, \"HW1\");","map":{"version":3,"names":["React","Message","MessageSender","s2","FriendMessage","avatar","jsxDEV","_jsxDEV","message0","id","user","name","message","text","time","friendMessage0","HW1","children","className","hwTitle","fileName","_jsxFileName","lineNumber","columnNumber","hw","M","_c","$RefreshReg$"],"sources":["/Users/anatolisaukhin/hws2/src/s2-homeworks/hw01/HW1.tsx"],"sourcesContent":["import React from \"react\";\nimport Message from \"./message/Message\";\nimport MessageSender from \"./message-sender/MessageSender\";\nimport s2 from \"../../s1-main/App.module.css\";\nimport FriendMessage from \"./friend-message/FriendMessage\";\nimport avatar from \"./avatar.png\";\n\n/*\n * 1 - описать тип MessageType\n * 2 - описать тип MessagePropsType в файле Message.tsx\n * 3 - в файле Message.tsx отобразить приходящие данные\n * 4 - выполнить пункты 2, 3 в файле FriendMessage.tsx\n * 5 - сделать стили в соответствии с дизайном\n * */\n\n// нужно создать правильный тип вместо any\nexport type MessageType = {\n  id: number;\n  user: UserType;\n  message: MessageObjPropType;\n};\n//  avatar: typeof avatar;\n\nexport type UserType = {\n  // avatar: string;\n   avatar: typeof avatar;\n\n  name: string;\n};\n\n export type MessageObjPropType = {\n  text: string;\n  time: string;\n};\n\n// структуру объекта не менять\nexport const message0: MessageType = {\n  id: 0,\n  user: {\n    avatar: avatar, // можно менять\n    name: \"Some Name\", // можно менять\n  },\n  message: {\n    text: \"some textsome textsome textsome textsome textsome textsome text\", // можно менять\n    time: \"22:00\", // можно менять\n  },\n};\nexport const friendMessage0: MessageType = {\n  id: 100,\n  user: {\n    avatar: avatar, // можно менять\n    name: \"Friend Name\", // можно менять\n  },\n  message: {\n    text: \"зеркальное сообщение для тренировки css\", // можно менять\n    time: \"22:00\", // можно менять\n  },\n};\n\nconst HW1 = () => {\n  return (\n    <div id={\"hw1\"}>\n      <div className={s2.hwTitle}>Homework #1</div>\n      <div className={s2.hw}>\n        {/*проверка отображения (не менять)*/}\n        <div>\n          <Message message={message0} />\n          <FriendMessage message={friendMessage0} />\n        </div>\n\n        {/*для автоматической проверки дз (не менять)*/}\n        <MessageSender M={Message} />\n      </div>\n    </div>\n  );\n};\n\nexport default HW1;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,EAAE,MAAM,8BAA8B;AAC7C,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,MAAM,MAAM,cAAc;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAcA;AACA,OAAO,MAAMC,QAAqB,GAAG;EACnCC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE;IACJL,MAAM,EAAEA,MAAM;IAAE;IAChBM,IAAI,EAAE,WAAW,CAAE;EACrB,CAAC;EACDC,OAAO,EAAE;IACPC,IAAI,EAAE,iEAAiE;IAAE;IACzEC,IAAI,EAAE,OAAO,CAAE;EACjB;AACF,CAAC;AACD,OAAO,MAAMC,cAA2B,GAAG;EACzCN,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE;IACJL,MAAM,EAAEA,MAAM;IAAE;IAChBM,IAAI,EAAE,aAAa,CAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACPC,IAAI,EAAE,yCAAyC;IAAE;IACjDC,IAAI,EAAE,OAAO,CAAE;EACjB;AACF,CAAC;AAED,MAAME,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACET,OAAA;IAAKE,EAAE,EAAE,KAAM;IAAAQ,QAAA,gBACbV,OAAA;MAAKW,SAAS,EAAEf,EAAE,CAACgB,OAAQ;MAAAF,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7ChB,OAAA;MAAKW,SAAS,EAAEf,EAAE,CAACqB,EAAG;MAAAP,QAAA,gBAEpBV,OAAA;QAAAU,QAAA,gBACEV,OAAA,CAACN,OAAO;UAACW,OAAO,EAAEJ;QAAS;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9BhB,OAAA,CAACH,aAAa;UAACQ,OAAO,EAAEG;QAAe;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAGNhB,OAAA,CAACL,aAAa;QAACuB,CAAC,EAAExB;MAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GAhBIV,GAAG;AAkBT,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}