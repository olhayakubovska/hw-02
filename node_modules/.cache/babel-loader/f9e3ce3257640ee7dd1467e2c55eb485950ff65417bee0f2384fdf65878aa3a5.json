{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw03/GreetingContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Greeting from './Greeting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const pureAddUser = (name, setError, setName, addUserCallback) => {\n  // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n};\nexport const pureOnBlur = (name, setError) => {// если имя пустое - показать ошибку\n};\nexport const pureOnEnter = (e, addUser) => {// если нажата кнопка Enter - добавить\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer = ({\n  users,\n  addUserCallback\n}) => {\n  _s();\n  // деструктуризация пропсов\n  const [name, setName] = useState(''); // need to fix any\n  const [error, setError] = useState(''); // need to fix any\n\n  const setNameCallback = e => {\n    // need to fix any\n    setName('some name'); // need to fix\n\n    error && setError('');\n  };\n  const addUser = () => {\n    pureAddUser(name, setError, setName, addUserCallback);\n  };\n  const onBlur = () => {\n    pureOnBlur(name, setError);\n  };\n  const onEnter = e => {\n    pureOnEnter(e, addUser);\n  };\n  const totalUsers = 0; // need to fix\n  const lastUserName = 'some name'; // need to fix\n\n  return /*#__PURE__*/_jsxDEV(Greeting, {\n    name: name,\n    setNameCallback: setNameCallback,\n    addUser: addUser,\n    onBlur: onBlur,\n    onEnter: onEnter,\n    error: error,\n    totalUsers: totalUsers,\n    lastUserName: lastUserName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(GreetingContainer, \"Mg8nc8Hx6w0hPt/33E6mVppDUgo=\");\n_c = GreetingContainer;\nexport default GreetingContainer;\n\n// import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\n// import Greeting from './Greeting'\n// import { UserType } from './HW3'\n\n// type GreetingContainerPropsType = {\n//     users: any // need to fix any\n//     addUserCallback: any // need to fix any\n// }\n\n// export const pureAddUser = (name: any, setError: any, setName: any, addUserCallback: any) => {\n//     // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n// }\n\n// export const pureOnBlur = (name: any, setError: any) => { // если имя пустое - показать ошибку\n// }\n\n// export const pureOnEnter = (e: any, addUser: any) => { // если нажата кнопка Enter - добавить\n// }\n\n// // более простой и понятный для новичков\n// // function GreetingContainer(props: GreetingPropsType) {\n\n// // более современный и удобный для про :)\n// const GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n//     users,\n//     addUserCallback,\n// }) => {\n//     // деструктуризация пропсов\n//     const [name, setName] = useState<any>('') // need to fix any\n//     const [error, setError] = useState<any>('') // need to fix any\n\n//     const setNameCallback = (e: any) => { // need to fix any\n//         setName('some name') // need to fix\n\n//         error && setError('')\n//     }\n//     const addUser = () => {\n//         pureAddUser(name, setError, setName, addUserCallback)\n//     }\n\n//     const onBlur = () => {\n//         pureOnBlur(name, setError)\n//     }\n\n//     const onEnter = (e: any) => {\n//         pureOnEnter(e, addUser)\n//     }\n\n//     const totalUsers = 0 // need to fix\n//     const lastUserName = 'some name' // need to fix\n\n//     return (\n//         <Greeting\n//             name={name}\n//             setNameCallback={setNameCallback}\n//             addUser={addUser}\n//             onBlur={onBlur}\n//             onEnter={onEnter}\n//             error={error}\n//             totalUsers={totalUsers}\n//             lastUserName={lastUserName}\n//         />\n//     )\n// }\n\n// export default GreetingContainer\nvar _c;\n$RefreshReg$(_c, \"GreetingContainer\");","map":{"version":3,"names":["React","useState","Greeting","jsxDEV","_jsxDEV","pureAddUser","name","setError","setName","addUserCallback","pureOnBlur","pureOnEnter","e","addUser","GreetingContainer","users","_s","error","setNameCallback","onBlur","onEnter","totalUsers","lastUserName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw03/GreetingContainer.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: any // need to fix any\n    addUserCallback: ()=>void // need to fix any\n}\n\nexport const pureAddUser = (name: any, setError: any, setName: any, addUserCallback: any) => {\n    // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n}\n\nexport const pureOnBlur = (name: any, setError: any) => { // если имя пустое - показать ошибку\n}\n\nexport const pureOnEnter = (e: any, addUser: any) => { // если нажата кнопка Enter - добавить\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n    users,\n    addUserCallback,\n}) => {\n    // деструктуризация пропсов\n    const [name, setName] = useState<any>('') // need to fix any\n    const [error, setError] = useState<any>('') // need to fix any\n\n    const setNameCallback = (e: any) => { // need to fix any\n        setName('some name') // need to fix\n\n        error && setError('')\n    }\n    const addUser = () => {\n        pureAddUser(name, setError, setName, addUserCallback)\n    }\n\n    const onBlur = () => {\n        pureOnBlur(name, setError)\n    }\n\n    const onEnter = (e: any) => {\n        pureOnEnter(e, addUser)\n    }\n\n    const totalUsers = 0 // need to fix\n    const lastUserName = 'some name' // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onBlur={onBlur}\n            onEnter={onEnter}\n            error={error}\n            totalUsers={totalUsers}\n            lastUserName={lastUserName}\n        />\n    )\n}\n\nexport default GreetingContainer\n\n// import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\n// import Greeting from './Greeting'\n// import { UserType } from './HW3'\n\n// type GreetingContainerPropsType = {\n//     users: any // need to fix any\n//     addUserCallback: any // need to fix any\n// }\n\n// export const pureAddUser = (name: any, setError: any, setName: any, addUserCallback: any) => {\n//     // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n// }\n\n// export const pureOnBlur = (name: any, setError: any) => { // если имя пустое - показать ошибку\n// }\n\n// export const pureOnEnter = (e: any, addUser: any) => { // если нажата кнопка Enter - добавить\n// }\n\n// // более простой и понятный для новичков\n// // function GreetingContainer(props: GreetingPropsType) {\n\n// // более современный и удобный для про :)\n// const GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n//     users,\n//     addUserCallback,\n// }) => {\n//     // деструктуризация пропсов\n//     const [name, setName] = useState<any>('') // need to fix any\n//     const [error, setError] = useState<any>('') // need to fix any\n\n//     const setNameCallback = (e: any) => { // need to fix any\n//         setName('some name') // need to fix\n\n//         error && setError('')\n//     }\n//     const addUser = () => {\n//         pureAddUser(name, setError, setName, addUserCallback)\n//     }\n\n//     const onBlur = () => {\n//         pureOnBlur(name, setError)\n//     }\n\n//     const onEnter = (e: any) => {\n//         pureOnEnter(e, addUser)\n//     }\n\n//     const totalUsers = 0 // need to fix\n//     const lastUserName = 'some name' // need to fix\n\n//     return (\n//         <Greeting\n//             name={name}\n//             setNameCallback={setNameCallback}\n//             addUser={addUser}\n//             onBlur={onBlur}\n//             onEnter={onEnter}\n//             error={error}\n//             totalUsers={totalUsers}\n//             lastUserName={lastUserName}\n//         />\n//     )\n// }\n\n// export default GreetingContainer\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgCC,QAAQ,QAAQ,OAAO;AACnE,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQjC,OAAO,MAAMC,WAAW,GAAGA,CAACC,IAAS,EAAEC,QAAa,EAAEC,OAAY,EAAEC,eAAoB,KAAK;EACzF;AAAA,CACH;AAED,OAAO,MAAMC,UAAU,GAAGA,CAACJ,IAAS,EAAEC,QAAa,KAAK,CAAE;AAAA,CACzD;AAED,OAAO,MAAMI,WAAW,GAAGA,CAACC,CAAM,EAAEC,OAAY,KAAK,CAAE;AAAA,CACtD;;AAED;AACA;;AAEA;AACA,MAAMC,iBAAuD,GAAGA,CAAC;EAC7DC,KAAK;EACLN;AACJ,CAAC,KAAK;EAAAO,EAAA;EACF;EACA,MAAM,CAACV,IAAI,EAAEE,OAAO,CAAC,GAAGP,QAAQ,CAAM,EAAE,CAAC,EAAC;EAC1C,MAAM,CAACgB,KAAK,EAAEV,QAAQ,CAAC,GAAGN,QAAQ,CAAM,EAAE,CAAC,EAAC;;EAE5C,MAAMiB,eAAe,GAAIN,CAAM,IAAK;IAAE;IAClCJ,OAAO,CAAC,WAAW,CAAC,EAAC;;IAErBS,KAAK,IAAIV,QAAQ,CAAC,EAAE,CAAC;EACzB,CAAC;EACD,MAAMM,OAAO,GAAGA,CAAA,KAAM;IAClBR,WAAW,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,eAAe,CAAC;EACzD,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACjBT,UAAU,CAACJ,IAAI,EAAEC,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMa,OAAO,GAAIR,CAAM,IAAK;IACxBD,WAAW,CAACC,CAAC,EAAEC,OAAO,CAAC;EAC3B,CAAC;EAED,MAAMQ,UAAU,GAAG,CAAC,EAAC;EACrB,MAAMC,YAAY,GAAG,WAAW,EAAC;;EAEjC,oBACIlB,OAAA,CAACF,QAAQ;IACLI,IAAI,EAAEA,IAAK;IACXY,eAAe,EAAEA,eAAgB;IACjCL,OAAO,EAAEA,OAAQ;IACjBM,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEA,OAAQ;IACjBH,KAAK,EAAEA,KAAM;IACbI,UAAU,EAAEA,UAAW;IACvBC,YAAY,EAAEA;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV,CAAC;AAAAV,EAAA,CAxCKF,iBAAuD;AAAAa,EAAA,GAAvDb,iBAAuD;AA0C7D,eAAeA,iBAAiB;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}