{"ast":null,"code":"import React from\"react\";import s from\"./Message.module.css\";// нужно создать правильный тип вместо any\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// нужно отобразить приходящие данные\nconst Message=props=>{return/*#__PURE__*/_jsxs(\"div\",{id:\"hw1-message-\"+props.message.id,className:s.message,children:[/*#__PURE__*/_jsxs(\"div\",{className:s.imageAndText,children:[/*#__PURE__*/_jsxs(\"div\",{className:s.text,children:[/*#__PURE__*/_jsx(\"div\",{id:\"hw1-name-\"+props.message.id,className:s.name,children:props.message.user.name}),/*#__PURE__*/_jsx(\"pre\",{id:\"hw1-text-\"+props.message.id,className:s.messageText,children:props.message.message.text})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{id:\"hw1-avatar-\"+props.message.id,src:props.message.user.avatar,alt:\"avatar\"})})]}),/*#__PURE__*/_jsx(\"div\",{id:\"hw1-time-\"+props.message.id,className:s.time,children:props.message.message.time})]});};export default Message;// import React from \"react\";\n// import s from \"./Message.module.css\";\n// import { MessageType } from \"../HW1\";\n// // нужно создать правильный тип вместо any\n// export type MessagePropsType = {\n//   message: MessageType;\n// };\n// // нужно отобразить приходящие данные\n// const Message = (props: MessagePropsType) => {\n//   return (\n//     <div id={\"hw1-message-\" + props.message.id} className={s.message}>\n//       <div className={s.imageAndText}>\n//         <img\n//           id={\"hw1-avatar-\" + props.message.id}\n//           src={props.message.user.avatar}\n//           alt=\"avatar\"\n//         />\n//         <div className={s.text}>\n//           <div id={\"hw1-name-\" + props.message.id} className={s.name}>\n//             {/*создаёт студент*/}\n//             {props.message.user.name}\n//             {/**/}\n//           </div>\n//           <pre id={\"hw1-text-\" + props.message.id} className={s.messageText}>\n//             {/*создаёт студент*/}\n//             {props.message.message.text}\n//             {/**/}\n//           </pre>\n//         </div>\n//       </div>\n//       <div id={\"hw1-time-\" + props.message.id} className={s.time}>\n//         {/*создаёт студент*/}\n//         {props.message.message.time}\n//         {/**/}\n//       </div>\n//     </div>\n//   );\n// };\n// export default Message;","map":{"version":3,"names":["React","s","jsx","_jsx","jsxs","_jsxs","Message","props","id","message","className","children","imageAndText","text","name","user","messageText","src","avatar","alt","time"],"sources":["/Users/anatolisaukhin/hws2/src/s2-homeworks/hw01/message/Message.tsx"],"sourcesContent":["import React from \"react\";\nimport s from \"./Message.module.css\";\nimport { MessageType } from \"../HW1\";\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n  message: MessageType;\n};\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n  return (\n    <div id={\"hw1-message-\" + props.message.id} className={s.message}>\n      <div className={s.imageAndText}>\n        <div className={s.text}>\n          <div id={\"hw1-name-\" + props.message.id} className={s.name}>\n            {/*создаёт студент*/}\n            {props.message.user.name}\n            {/**/}\n          </div>\n          <pre id={\"hw1-text-\" + props.message.id} className={s.messageText}>\n            {/*создаёт студент*/}\n            {props.message.message.text}\n\n            {/**/}\n          </pre>\n        </div>\n        <div>\n          <img\n            id={\"hw1-avatar-\" + props.message.id}\n            src={props.message.user.avatar}\n            alt=\"avatar\"\n          />\n        </div>\n      </div>\n      <div id={\"hw1-time-\" + props.message.id} className={s.time}>\n        {/*создаёт студент*/}\n        {props.message.message.time}\n\n        {/**/}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n\n// import React from \"react\";\n// import s from \"./Message.module.css\";\n// import { MessageType } from \"../HW1\";\n\n// // нужно создать правильный тип вместо any\n// export type MessagePropsType = {\n//   message: MessageType;\n// };\n\n// // нужно отобразить приходящие данные\n// const Message = (props: MessagePropsType) => {\n//   return (\n//     <div id={\"hw1-message-\" + props.message.id} className={s.message}>\n//       <div className={s.imageAndText}>\n//         <img\n//           id={\"hw1-avatar-\" + props.message.id}\n//           src={props.message.user.avatar}\n//           alt=\"avatar\"\n//         />\n//         <div className={s.text}>\n//           <div id={\"hw1-name-\" + props.message.id} className={s.name}>\n//             {/*создаёт студент*/}\n//             {props.message.user.name}\n//             {/**/}\n//           </div>\n//           <pre id={\"hw1-text-\" + props.message.id} className={s.messageText}>\n//             {/*создаёт студент*/}\n//             {props.message.message.text}\n\n//             {/**/}\n//           </pre>\n//         </div>\n//       </div>\n//       <div id={\"hw1-time-\" + props.message.id} className={s.time}>\n//         {/*создаёт студент*/}\n//         {props.message.message.time}\n\n//         {/**/}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Message;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,CAAC,KAAM,sBAAsB,CAGpC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAKA;AACA,KAAM,CAAAC,OAAO,CAAIC,KAAuB,EAAK,CAC3C,mBACEF,KAAA,QAAKG,EAAE,CAAE,cAAc,CAAGD,KAAK,CAACE,OAAO,CAACD,EAAG,CAACE,SAAS,CAAET,CAAC,CAACQ,OAAQ,CAAAE,QAAA,eAC/DN,KAAA,QAAKK,SAAS,CAAET,CAAC,CAACW,YAAa,CAAAD,QAAA,eAC7BN,KAAA,QAAKK,SAAS,CAAET,CAAC,CAACY,IAAK,CAAAF,QAAA,eACrBR,IAAA,QAAKK,EAAE,CAAE,WAAW,CAAGD,KAAK,CAACE,OAAO,CAACD,EAAG,CAACE,SAAS,CAAET,CAAC,CAACa,IAAK,CAAAH,QAAA,CAExDJ,KAAK,CAACE,OAAO,CAACM,IAAI,CAACD,IAAI,CAErB,CAAC,cACNX,IAAA,QAAKK,EAAE,CAAE,WAAW,CAAGD,KAAK,CAACE,OAAO,CAACD,EAAG,CAACE,SAAS,CAAET,CAAC,CAACe,WAAY,CAAAL,QAAA,CAE/DJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACI,IAAI,CAGxB,CAAC,EACH,CAAC,cACNV,IAAA,QAAAQ,QAAA,cACER,IAAA,QACEK,EAAE,CAAE,aAAa,CAAGD,KAAK,CAACE,OAAO,CAACD,EAAG,CACrCS,GAAG,CAAEV,KAAK,CAACE,OAAO,CAACM,IAAI,CAACG,MAAO,CAC/BC,GAAG,CAAC,QAAQ,CACb,CAAC,CACC,CAAC,EACH,CAAC,cACNhB,IAAA,QAAKK,EAAE,CAAE,WAAW,CAAGD,KAAK,CAACE,OAAO,CAACD,EAAG,CAACE,SAAS,CAAET,CAAC,CAACmB,IAAK,CAAAT,QAAA,CAExDJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACW,IAAI,CAGxB,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,OAAO,CAEtB;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}