{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw01/message/Message.tsx\";\nimport React from \"react\";\nimport s from \"./Message.module.css\";\n\n// нужно создать правильный тип вместо any\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// нужно отобразить приходящие данные\nconst Message = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"hw1-message-\" + props.message.id,\n    className: s.message,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.imageAndText,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.text,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hw1-name-\" + props.message.id,\n          className: s.name,\n          children: props.message.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          id: \"hw1-text-\" + props.message.id,\n          className: s.messageText,\n          children: props.message.message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"hw1-avatar-\" + props.message.id,\n          src: props.message.user.avatar,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hw1-time-\" + props.message.id,\n      className: s.time,\n      children: props.message.message.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Message;\nexport default Message;\n\n// import React from \"react\";\n// import s from \"./Message.module.css\";\n// import { MessageType } from \"../HW1\";\n\n// // нужно создать правильный тип вместо any\n// export type MessagePropsType = {\n//   message: MessageType;\n// };\n\n// // нужно отобразить приходящие данные\n// const Message = (props: MessagePropsType) => {\n//   return (\n//     <div id={\"hw1-message-\" + props.message.id} className={s.message}>\n//       <div className={s.imageAndText}>\n//         <img\n//           id={\"hw1-avatar-\" + props.message.id}\n//           src={props.message.user.avatar}\n//           alt=\"avatar\"\n//         />\n//         <div className={s.text}>\n//           <div id={\"hw1-name-\" + props.message.id} className={s.name}>\n//             {/*создаёт студент*/}\n//             {props.message.user.name}\n//             {/**/}\n//           </div>\n//           <pre id={\"hw1-text-\" + props.message.id} className={s.messageText}>\n//             {/*создаёт студент*/}\n//             {props.message.message.text}\n\n//             {/**/}\n//           </pre>\n//         </div>\n//       </div>\n//       <div id={\"hw1-time-\" + props.message.id} className={s.time}>\n//         {/*создаёт студент*/}\n//         {props.message.message.time}\n\n//         {/**/}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Message;\n;\nMessage.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Message\",\n  \"props\": {\n    \"message\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"object\",\n        \"raw\": \"{\\n  id: number;\\n  user: UserType;\\n  message: MessageObjPropType;\\n}\",\n        \"signature\": {\n          \"properties\": [{\n            \"key\": \"id\",\n            \"value\": {\n              \"name\": \"number\",\n              \"required\": true\n            }\n          }, {\n            \"key\": \"user\",\n            \"value\": {\n              \"name\": \"signature\",\n              \"type\": \"object\",\n              \"raw\": \"{\\n  avatar: string;\\n  // avatar: typeof avatar;\\n\\n  name: string;\\n}\",\n              \"signature\": {\n                \"properties\": [{\n                  \"key\": \"avatar\",\n                  \"value\": {\n                    \"name\": \"string\",\n                    \"required\": true\n                  }\n                }, {\n                  \"key\": \"name\",\n                  \"value\": {\n                    \"name\": \"string\",\n                    \"required\": true\n                  }\n                }]\n              },\n              \"required\": true\n            }\n          }, {\n            \"key\": \"message\",\n            \"value\": {\n              \"name\": \"signature\",\n              \"type\": \"object\",\n              \"raw\": \"{\\n  text: string;\\n  time: string;\\n}\",\n              \"signature\": {\n                \"properties\": [{\n                  \"key\": \"text\",\n                  \"value\": {\n                    \"name\": \"string\",\n                    \"required\": true\n                  }\n                }, {\n                  \"key\": \"time\",\n                  \"value\": {\n                    \"name\": \"string\",\n                    \"required\": true\n                  }\n                }]\n              },\n              \"required\": true\n            }\n          }]\n        }\n      },\n      \"description\": \"\"\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","s","jsxDEV","_jsxDEV","Message","props","id","message","className","children","imageAndText","text","name","user","fileName","_jsxFileName","lineNumber","columnNumber","messageText","src","avatar","alt","time","_c"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw01/message/Message.tsx"],"sourcesContent":["import React from \"react\";\nimport s from \"./Message.module.css\";\nimport { MessageType } from \"../HW1\";\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n  message: MessageType;\n};\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n  return (\n    <div id={\"hw1-message-\" + props.message.id} className={s.message}>\n      <div className={s.imageAndText}>\n        <div className={s.text}>\n          <div id={\"hw1-name-\" + props.message.id} className={s.name}>\n            {/*создаёт студент*/}\n            {props.message.user.name}\n            {/**/}\n          </div>\n          <pre id={\"hw1-text-\" + props.message.id} className={s.messageText}>\n            {/*создаёт студент*/}\n            {props.message.message.text}\n\n            {/**/}\n          </pre>\n        </div>\n        <div>\n          <img\n            id={\"hw1-avatar-\" + props.message.id}\n            src={props.message.user.avatar}\n            alt=\"avatar\"\n          />\n        </div>\n      </div>\n      <div id={\"hw1-time-\" + props.message.id} className={s.time}>\n        {/*создаёт студент*/}\n        {props.message.message.time}\n\n        {/**/}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n\n// import React from \"react\";\n// import s from \"./Message.module.css\";\n// import { MessageType } from \"../HW1\";\n\n// // нужно создать правильный тип вместо any\n// export type MessagePropsType = {\n//   message: MessageType;\n// };\n\n// // нужно отобразить приходящие данные\n// const Message = (props: MessagePropsType) => {\n//   return (\n//     <div id={\"hw1-message-\" + props.message.id} className={s.message}>\n//       <div className={s.imageAndText}>\n//         <img\n//           id={\"hw1-avatar-\" + props.message.id}\n//           src={props.message.user.avatar}\n//           alt=\"avatar\"\n//         />\n//         <div className={s.text}>\n//           <div id={\"hw1-name-\" + props.message.id} className={s.name}>\n//             {/*создаёт студент*/}\n//             {props.message.user.name}\n//             {/**/}\n//           </div>\n//           <pre id={\"hw1-text-\" + props.message.id} className={s.messageText}>\n//             {/*создаёт студент*/}\n//             {props.message.message.text}\n\n//             {/**/}\n//           </pre>\n//         </div>\n//       </div>\n//       <div id={\"hw1-time-\" + props.message.id} className={s.time}>\n//         {/*создаёт студент*/}\n//         {props.message.message.time}\n\n//         {/**/}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Message;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;;AAGpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA;AACA,MAAMC,OAAO,GAAIC,KAAuB,IAAK;EAC3C,oBACEF,OAAA;IAAKG,EAAE,EAAE,cAAc,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;IAACE,SAAS,EAAEP,CAAC,CAACM,OAAQ;IAAAE,QAAA,gBAC/DN,OAAA;MAAKK,SAAS,EAAEP,CAAC,CAACS,YAAa;MAAAD,QAAA,gBAC7BN,OAAA;QAAKK,SAAS,EAAEP,CAAC,CAACU,IAAK;QAAAF,QAAA,gBACrBN,OAAA;UAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;UAACE,SAAS,EAAEP,CAAC,CAACW,IAAK;UAAAH,QAAA,EAExDJ,KAAK,CAACE,OAAO,CAACM,IAAI,CAACD;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAErB,gBACLd,OAAA;UAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;UAACE,SAAS,EAAEP,CAAC,CAACiB,WAAY;UAAAT,QAAA,EAE/DJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACI;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGxB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,gBACLd,OAAA;QAAAM,QAAA,eACEN,OAAA;UACEG,EAAE,EAAE,aAAa,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAE;UACpCa,GAAG,EAAEd,KAAK,CAACE,OAAO,CAACM,IAAI,CAACO,MAAM;UAC9BC,GAAG,EAAC;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,gBACLd,OAAA;MAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;MAACE,SAAS,EAAEP,CAAC,CAACqB,IAAK;MAAAb,QAAA,EAExDJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACe;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF;AAET,CAAC;AAAAM,EAAA,GAjCKnB,OAAO;AAmCb,eAAeA,OAAO;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}