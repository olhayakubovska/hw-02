{"ast":null,"code":"var _jsxFileName = \"/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw09/Clock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SuperButton from \"../hw04/common/c2-SuperButton/SuperButton\";\nimport { restoreState } from \"../hw06/localStorage/localStorage\";\nimport s from \"./Clock.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Clock() {\n  _s();\n  const [timerId, setTimerId] = useState(undefined);\n  // for autotests // не менять // можно подсунуть в локалСторэдж нужную дату, чтоб увидеть как она отображается\n  const [date, setDate] = useState(new Date(restoreState(\"hw9-date\", Date.now())));\n  const [show, setShow] = useState(false);\n\n  //   useEffect(() => {\n  //     setTimeout(() => {\n  //       const date2 = new Date();\n  //       setDate(date2);\n  //     }, 1000);\n  //   }, [date]);\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    let timerId;\n    const updateTime = () => {\n      setTime(new Date()); // Обновляем время\n      timerId = setTimeout(updateTime, 1000); // Планируем следующее обновление через 1 секунду\n    };\n    updateTime(); // Запускаем первый раз\n\n    // Очистка таймера при размонтировании\n    return () => clearTimeout(timerId);\n  }, []);\n  const start = () => {\n    // пишут студенты // запустить часы (должно отображаться реальное время, а не +1)\n    // сохранить ид таймера (https://learn.javascript.ru/settimeout-setinterval#setinterval)\n\n    // const setTimout1 = setTimeout(() => {\n    //   const date = new Date();\n    //   console.log(date)\n    // });\n    console.log(date, \"aaa\");\n  };\n  const stop = () => {\n    // пишут студенты // поставить часы на паузу, обнулить ид таймера (timerId <- undefined)\n  };\n  const onMouseEnter = () => {\n    // пишут студенты // показать дату если наведена мышка\n  };\n  const onMouseLeave = () => {\n    // пишут студенты // спрятать дату если мышка не наведена\n  };\n  const stringTime = \"date->time\" || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 38\n  }, this); // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n  const stringDate = \"date->date\" || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 38\n  }, this); // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n  // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n  const stringDay = \"date->day\" || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 36\n  }, this); // пишут студенты\n  const stringMonth = \"date->month\" || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 40\n  }, this); // пишут студенты\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.clock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hw9-watch\",\n      className: s.watch,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"hw9-day\",\n        children: stringDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), \",\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"hw9-time\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: stringTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hw9-more\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.more,\n        children: show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"hw9-month\",\n            children: stringMonth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), \",\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"hw9-date\",\n            children: stringDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.buttonsContainer,\n      children: [/*#__PURE__*/_jsxDEV(SuperButton, {\n        id: \"hw9-button-start\",\n        disabled: false // пишут студенты // задизэйблить если таймер запущен\n        ,\n        onClick: start,\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SuperButton, {\n        id: \"hw9-button-stop\",\n        disabled: true // пишут студенты // задизэйблить если таймер не запущен\n        ,\n        onClick: stop,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Clock, \"dS2T6nEPQU1tJcrC6AQ3snAWKW4=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useEffect","useState","SuperButton","restoreState","s","jsxDEV","_jsxDEV","Fragment","_Fragment","Clock","_s","timerId","setTimerId","undefined","date","setDate","Date","now","show","setShow","time","setTime","updateTime","setTimeout","clearTimeout","start","console","log","stop","onMouseEnter","onMouseLeave","stringTime","fileName","_jsxFileName","lineNumber","columnNumber","stringDate","stringDay","stringMonth","className","clock","children","id","watch","more","buttonsContainer","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/anatolisaukhin/hw-02/src/s2-homeworks/hw09/Clock.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SuperButton from \"../hw04/common/c2-SuperButton/SuperButton\";\nimport { restoreState } from \"../hw06/localStorage/localStorage\";\nimport s from \"./Clock.module.css\";\n\nfunction Clock() {\n  const [timerId, setTimerId] = useState<number | undefined>(undefined);\n  // for autotests // не менять // можно подсунуть в локалСторэдж нужную дату, чтоб увидеть как она отображается\n  const [date, setDate] = useState<Date>(\n    new Date(restoreState(\"hw9-date\", Date.now()))\n  );\n  const [show, setShow] = useState<boolean>(false);\n\n//   useEffect(() => {\n//     setTimeout(() => {\n//       const date2 = new Date();\n//       setDate(date2);\n//     }, 1000);\n//   }, [date]);\nconst [time, setTime] = useState(new Date());\n\nuseEffect(() => {\n    let timerId: any;\n\n    const updateTime = () => {\n      setTime(new Date());               // Обновляем время\n      timerId = setTimeout(updateTime, 1000); // Планируем следующее обновление через 1 секунду\n    };\n\n    updateTime(); // Запускаем первый раз\n\n    // Очистка таймера при размонтировании\n    return () => clearTimeout(timerId);\n  }, []);\n\n  const start = () => {\n    // пишут студенты // запустить часы (должно отображаться реальное время, а не +1)\n    // сохранить ид таймера (https://learn.javascript.ru/settimeout-setinterval#setinterval)\n\n    // const setTimout1 = setTimeout(() => {\n    //   const date = new Date();\n    //   console.log(date)\n    // });\n    console.log(date, \"aaa\");\n  };\n\n  const stop = () => {\n    // пишут студенты // поставить часы на паузу, обнулить ид таймера (timerId <- undefined)\n  };\n\n  const onMouseEnter = () => {\n    // пишут студенты // показать дату если наведена мышка\n  };\n  const onMouseLeave = () => {\n    // пишут студенты // спрятать дату если мышка не наведена\n  };\n\n  const stringTime = \"date->time\" || <br />; // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n  const stringDate = \"date->date\" || <br />; // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n  // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n  const stringDay = \"date->day\" || <br />; // пишут студенты\n  const stringMonth = \"date->month\" || <br />; // пишут студенты\n\n  return (\n    <div className={s.clock}>\n      <div\n        id={\"hw9-watch\"}\n        className={s.watch}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <span id={\"hw9-day\"}>{stringDay}</span>,{\" \"}\n        <span id={\"hw9-time\"}>\n          <strong>{stringTime}</strong>\n        </span>\n      </div>\n\n      <div id={\"hw9-more\"}>\n        <div className={s.more}>\n          {show ? (\n            <>\n              <span id={\"hw9-month\"}>{stringMonth}</span>,{\" \"}\n              <span id={\"hw9-date\"}>{stringDate}</span>\n            </>\n          ) : (\n            <>\n              <br />\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className={s.buttonsContainer}>\n        <SuperButton\n          id={\"hw9-button-start\"}\n          disabled={false} // пишут студенты // задизэйблить если таймер запущен\n          onClick={start}\n        >\n          start\n        </SuperButton>\n        <SuperButton\n          id={\"hw9-button-stop\"}\n          disabled={true} // пишут студенты // задизэйблить если таймер не запущен\n          onClick={stop}\n        >\n          stop\n        </SuperButton>\n      </div>\n    </div>\n  );\n}\n\nexport default Clock;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}